<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ssafy.user">
	<select id="getPassWord" parameterType="com.ssafy.project.model.User" resultType="java.lang.String">
		SELECT userPw FROM project.user WHERE userId = #{userId}
	</select>

	<insert id="insertUser" parameterType="com.ssafy.project.model.User">
		insert into project.user(userId, userPw, studentId,
		email, userName, phone, delFlag, overduePeriod, userRoleId, cityId)
		values(#{userId}, #{userPw}, #{studentId}, #{email}, #{userName},
		#{phone}, #{delFlag}, #{overduePeriod}, #{userRoleId}, #{cityId});
	</insert>

	<select id="getUser" parameterType="java.lang.String" resultType="com.ssafy.project.model.User">
		SELECT u.userImg, u.userId, u.studentId, u.email, u.userName, u.phone,
		u.overduePeriod, u.userRoleId, u.cityId, u.classId, r.roleName as userRoleName, city.cityName, class.classRoom as className
		FROM project.user as u
		LEFT JOIN project.userrole as r
		ON r.userRoleId = u.userRoleId
		LEFT JOIN project.city as city
		ON city.cityId = u.cityId
		LEFT JOIN project.class as class
		ON class.classId = u.classId
		WHERE userId = #{userId} and delFlag = 0
	</select>

	<insert id="insertIC" parameterType="com.ssafy.project.model.InterestCategory">
		INSERT
		INTO project.interestcategory
		VALUES(#{userId},
		#{categoryId});
	</insert>

	<select id="getInterestCategory" parameterType="java.lang.String" resultType="java.lang.String">
		SELECT categoryId
		FROM
		project.interestcategory
		WHERE userId = #{userId}
	</select>

	<update id="updateInfo" parameterType="com.ssafy.project.model.User">
		<if test="studentId != null and studentId != '' and email != null and email != '' and userName != null and userName != '' and phone != null and phone != '' and cityId != null and cityId != ''">
			UPDATE project.user
			SET studentId=#{studentId}, email=#{email}, userName=#{userName}, phone=#{phone},
			cityId=#{cityId}, classId=#{classId}, overduePeriod=#{overduePeriod}, userImg=#{userImg}, userRoleId=#{userRoleId}
			WHERE userId=#{userId}
		</if>
	</update>

	<delete id="deleteIC" parameterType="java.lang.String">
		DELETE
		FROM project.interestcategory
		WHERE userId = #{userId}
	</delete>

	<select id="getAllUser" parameterType="HashMap" resultType="com.ssafy.project.model.User">
		SELECT u.userId, u.studentId, u.email, u.userName, u.phone,
		u.overduePeriod, u.userRoleId, u.userImg, city.cityName, class.classRoom AS className, role.RoleName AS userRoleName
		FROM project.user AS u
		LEFT JOIN project.city AS city
		ON u.cityId = city.cityId
		LEFT JOIN project.class AS class
		ON u.classId = class.classId
		LEFT JOIN project.userrole AS role
		ON u.userRoleId = role.userRoleId
		WHERE delFlag != 1 AND 1=1
		<if test="userRoleId != 1">
			AND u.cityId = #{cityId}
		</if>	
	</select>

	<select id="checkId" parameterType="java.lang.String" resultType="java.lang.Integer">
		SELECT count(userId)
		FROM project.user
		WHERE userId = #{userId}
	</select>

	<select id="getProfile" parameterType="java.lang.String" resultType="com.ssafy.project.model.User">
		SELECT userImg,userId, userPw, userName, studentId, cityId, email, userId, phone, overduePeriod, userRoleId
		FROM project.user
		WHERE userId = #{userId}
	</select>
	
	<select id ="getUserInfoByUserId" parameterType="java.lang.String" resultType="com.ssafy.project.model.User">
		SELECT u.userId, u.studentId, u.email, u.userName, u.phone, u.userImg, u.overduePeriod, u.cityId, u.classId, city.cityName, class.classRoom as className, u.userRoleId, role.roleName as userRoleName
        FROM project.user as u,
        (SELECT cityName FROM project.city WHERE cityId = (SELECT cityId FROM project.user WHERE userId = #{userId})) as city,
        (SELECT classRoom FROM project.class WHERE classId = (SELECT classId FROM project.user WHERE userId = #{userId})) as class,
        (SELECT roleName FROM project.userrole WHERE userRoleId = (SELECT userRoleId FROM project.user WHERE userId = #{userId})) as role
        WHERE u.userId = #{userId};
	</select>
	
	<select id ="getAdminInfoByUserId" parameterType="java.lang.String" resultType="com.ssafy.project.model.User">
		SELECT u.userId, u.studentId, u.email, u.userName, u.phone, u.userImg, u.overduePeriod, u.cityId, city.cityName, u.userRoleId, role.roleName as userRoleName
        FROM project.user as u,
        (SELECT cityName FROM project.city WHERE cityId = (SELECT cityId FROM project.user WHERE userId = #{userId})) as city,
        (SELECT roleName FROM project.userrole WHERE userRoleId = (SELECT userRoleId FROM project.user WHERE userId = #{userId})) as role
        WHERE u.userId = #{userId};
	</select>
	
	<select id ="getUserRoleIdByUserId" parameterType="java.lang.String" resultType="java.lang.String">
		SELECT userRoleId
		FROM project.user
		WHERE userId = #{userId}
	</select>
	
	<select id="getInterestCategoryByUserId" parameterType="java.lang.String" resultType="java.lang.String">
		select c.categoryName
		FROM project.category as c
		where categoryId in (select categoryId from project.interestcategory where userId = #{userId});
	</select>
	
	<select id="checkStudentId" parameterType="HashMap" resultType="java.lang.Integer">
		SELECT count(studentId)
		FROM project.user
		WHERE studentId = #{studentId} and userId != #{userId}
	</select>
	
	<update id="updateUserPw" parameterType="com.ssafy.project.model.User">
		UPDATE project.user
		SET userPw = #{userPw}
		WHERE userId = #{userId}
	</update>

</mapper>